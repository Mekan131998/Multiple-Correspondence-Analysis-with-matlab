%Our data matrix
N=[ 1 0 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 1 0 0 0 0 1 0;
    1 0 1 0 0 1 0 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 0 1;
    1 0 1 0 1 0 1 0 0 1 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 0 1;
    0 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 1 0 0 0 0 0 1 1 0;
    0 1 0 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 0;
    1 0 1 0 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 1 0;
    1 0 0 1 0 1 1 0 0 1 0 1 0 1 1 0 0 0 0 1 0 0 1 0 0 1 0;
    1 0 1 0 0 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 1 0 1 0;
    0 1 1 0 1 0 1 0 0 1 0 1 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0;
    1 0 1 0 0 1 0 1 0 1 0 1 0 1 0 0 1 1 0 0 0 0 0 1 0 1 0;
    1 0 0 1 0 1 1 0 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 1;
    1 0 1 0 0 1 0 1 0 1 0 1 0 1 0 0 1 1 0 0 0 1 0 0 0 1 0];

%adding columns:
n_i=sum(N,2);

%adding rows:
n_j=sum(N);

%sum
n=sum(sum(N));

%Uncorrolated matrix
U=(n_i*n_j)/n;

%sizes 
[numRows,numCols] = size(N);
X=zeros(numRows,numCols);
for i=1:numRows
    for j=1:numCols
        X(i,j)=X(i,j)+(N(i,j)-U(i,j))/sqrt(U(i,j));
    end
end

%diagonal matrix
Dh=diag(n_i);
Df=diag(n_j);

%V vector 
V=(X'*X)/(n-1);

%eigenvalues 
[E, D]=eig(V);

[~,D] = sort(-diag(D));
D=diag(D);

%rows in P1P2
R=sqrt(n)*inv(Dh)*N*sqrt(inv(Df))*E;
C=sqrt(n-1)*sqrt(inv(Df))*E*sqrt(D);

figure, plot(R(:,1), C(:,1), 'k*')
xlabel('PC1'), ylabel('PC2');
